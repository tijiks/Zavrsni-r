{"version":3,"sources":["components/TodoItem/TodoItem.js","components/FormTodo/FormTodo.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","todo","index","markTodo","removeTodo","Card","className","Body","style","textDecoration","isDone","text","Button","variant","onClick","FormTodo","addTodo","React","useState","value","setValue","Form","onSubmit","e","preventDefault","Group","Label","Control","type","onChange","target","placeholder","App","todos","setTodos","newTodos","splice","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAGaA,EAAW,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WAC9C,OACE,cAACC,EAAA,EAAD,CAAMC,UAAU,UAAhB,SACE,cAACD,EAAA,EAAKE,KAAN,UACE,sBAAKD,UAAU,OAAf,UACE,sBAAME,MAAO,CAAEC,eAAgBR,EAAKS,OAAS,eAAiB,IAA9D,SAAqET,EAAKU,OAC1E,sBAAKL,UAAU,iBAAf,UACE,cAACM,EAAA,EAAD,CAAQC,QAAQ,eAAeC,QAAS,kBAAMX,EAASD,IAAvD,kBAA6E,IAC7E,cAACU,EAAA,EAAD,CAAQC,QAAQ,eAAeC,QAAS,kBAAMV,EAAWF,IAAzD,+B,QCPDa,G,MAAW,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,EAA0BC,IAAMC,SAAS,IAAzC,mBAAOC,EAAP,KAAcC,EAAd,KAQA,OACE,eAACC,EAAA,EAAD,CAAMC,SARa,SAAAC,GACnBA,EAAEC,iBACGL,IACLH,EAAQG,GACRC,EAAS,MAIT,UACA,eAACC,EAAA,EAAKI,MAAN,CAAYnB,UAAU,YAAtB,UACE,cAACe,EAAA,EAAKK,MAAN,uBACA,cAACL,EAAA,EAAKM,QAAN,CACErB,UAAU,QAEVsB,KAAK,OACLT,MAAOA,EACPU,SAAU,SAAAN,GAAC,OAAIH,EAASG,EAAEO,OAAOX,QACjCY,YAAY,gBAJR,QAMR,cAACnB,EAAA,EAAD,CAAQC,QAAQ,OAAOe,KAAK,SAA5B,yB,MC2BSI,MA9Cf,WACE,MAA0Bf,IAAMC,SAAS,CACvC,CACEP,KAAM,gBACND,QAAQ,KAHZ,mBAAOuB,EAAP,KAAcC,EAAd,KAYM/B,EAAW,SAAAD,GACf,IAAMiC,EAAQ,YAAOF,GACrBE,EAASjC,GAAOQ,QAAS,EACzBwB,EAASC,IAGL/B,EAAa,SAAAF,GACjB,IAAMiC,EAAQ,YAAOF,GACrBE,EAASC,OAAOlC,EAAO,GACvBgC,EAASC,IAGX,OACE,qBAAK7B,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,uBACA,cAAC,EAAD,CAAUU,QArBA,SAAAL,GACd,IAAMwB,EAAQ,sBAAOF,GAAP,CAAc,CAAEtB,UAC9BuB,EAASC,MAoBL,8BACGF,EAAMI,KAAI,SAACpC,EAAMC,GAAP,OACT,cAAC,EAAD,CAEAA,MAAOA,EACPD,KAAMA,EACNE,SAAUA,EACVC,WAAYA,GAJPF,cC3BFoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c7c732b5.chunk.js","sourcesContent":["import { Button, Card } from 'react-bootstrap';\r\nimport './TodoItem.css';\r\n\r\nexport const TodoItem = ({ todo, index, markTodo, removeTodo }) => {\r\n    return (\r\n      <Card className=\"cardCss\">\r\n        <Card.Body>\r\n          <div className=\"todo\">\r\n            <span style={{ textDecoration: todo.isDone ? \"line-through\" : \"\" }}>{todo.text}</span>\r\n            <div className=\"buttonPosition\">\r\n              <Button variant=\"outline-dark\" onClick={() => markTodo(index)}>done</Button>{' '}\r\n              <Button variant=\"outline-dark\" onClick={() => removeTodo(index)}>delete</Button>\r\n            </div>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }","import React from \"react\";\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport './FormTodo.css';\r\n\r\nexport const FormTodo = ({ addTodo }) => {\r\n    const [value, setValue] = React.useState(\"\");\r\n    const handleSubmit = e => {\r\n      e.preventDefault();\r\n      if (!value) return;\r\n      addTodo(value);\r\n      setValue(\"\");\r\n    };\r\n  \r\n    return (\r\n      <Form onSubmit={handleSubmit}> \r\n      <Form.Group className=\"formGroup\">\r\n        <Form.Label>Add Todo</Form.Label>\r\n        <Form.Control \r\n          className=\"input\"\r\n          key=\" \" \r\n          type=\"text\" \r\n          value={value} \r\n          onChange={e => setValue(e.target.value)} \r\n          placeholder=\"Add new todo\" />\r\n      </Form.Group>\r\n      <Button variant=\"dark\" type=\"submit\">\r\n        Submit\r\n      </Button>\r\n    </Form>\r\n    );\r\n  }","import React from \"react\";\nimport \"./App.css\";\nimport { TodoItem } from \"./components/TodoItem/TodoItem\";\nimport { FormTodo } from \"./components/FormTodo/FormTodo\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [todos, setTodos] = React.useState([\n    {\n      text: \"Ovo je primer\",\n      isDone: false\n    }\n  ]);\n  \n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  };\n\n  const markTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isDone = true;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <h1 className=\"title\">Todo list</h1>\n        <FormTodo addTodo={addTodo} />\n        <div>\n          {todos.map((todo, index) => (\n            <TodoItem\n            key={index}\n            index={index}\n            todo={todo}\n            markTodo={markTodo}\n            removeTodo={removeTodo}\n            /> \n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}